name: test
on: push

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: example
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      DATABASE_URL: "postgresql://postgres:example@localhost"
    
    strategy:
      fail-fast: false
      matrix:
        queryEngine: ['library', 'binary']

    steps:
      - uses: actions/checkout@v2

      - name: Set CLI Engine Type
        run: |
          echo "PRISMA_CLI_QUERY_ENGINE_TYPE=${{ matrix.queryEngine }}" >> $GITHUB_ENV
      - name: Set Client Engine Type
        run: |
          echo "PRISMA_CLIENT_ENGINE_TYPE=${{ matrix.queryEngine }}" >> $GITHUB_ENV

      - run: yarn
      - run: npx prisma db push
      - run: yarn test --runInBand --logHeapUsage
      - run: yarn test --runInBand --logHeapUsage --silent=false
      - run: yarn test --runInBand --detectLeaks query
